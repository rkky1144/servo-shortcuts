<xml xmlns="https://developers.google.com/blockly/xml"><variables></variables><block type="pxt-on-start" id="xRRgvHNlG#rZ^u`HECiY" x="20" y="20"><statement name="HANDLER"><block type="SuperBit_Servo" id="Ps)WbaYV|ksZh34R8?At"><field name="num">SuperBit.enServo.S4</field><value name="value"><shadow type="math_number_minmax" id="eDuqmv2C9+J5!Mm`pW4o"><mutation min="0" max="180" precision="0"></mutation><field name="SLIDER">90</field></shadow></value><next><block type="SuperBit_Servo" id="T^%]Y-~9uwEalNr];dCF"><field name="num">SuperBit.enServo.S1</field><value name="value"><shadow type="math_number_minmax" id="pQ:Y6|^ThVQN+UkVB,Jv"><mutation min="0" max="180" precision="0"></mutation><field name="SLIDER">0.68</field></shadow></value><next><block type="SuperBit_Servo" id="nK41k0aqtf%Lu!~-aY7Q"><field name="num">SuperBit.enServo.S2</field><value name="value"><shadow type="math_number_minmax" id="*=)bl~#PoWC+)/Am3CTX"><mutation min="0" max="180" precision="0"></mutation><field name="SLIDER">90.72</field></shadow></value><next><block type="SuperBit_Servo" id="(wqz}M7TdjOZbLu+U@{G"><field name="num">SuperBit.enServo.S3</field><value name="value"><shadow type="math_number_minmax" id="W0TmN0Fg-H^4gB;cmVeE"><mutation min="0" max="180" precision="0"></mutation><field name="SLIDER">10</field></shadow></value><next><block type="typescript_statement" id="5*hP9/KOaOmJx!fw8Do["><mutation xmlns="http://www.w3.org/1999/xhtml" line0="namespace servoCalculation {" line1="" line2="    //%block = &quot;clamp open $open&quot;" line3="    export function clampOpen(open: boolean) {" line4="        if (open) {" line5="            SuperBit.Servo(SuperBit.enServo.S3, 135)" line6="        } else {" line7="            SuperBit.Servo(SuperBit.enServo.S3, 10)" line8="        }" line9="    }" line10="" line11="    //%block = &quot;clamp at $first_x $first_y&quot; &quot;$forward $t1 $t2&quot;" line12="    export function clampAt(first_x: number, first_y: number, forward: boolean, t1: number, t2: number) {" line13="        if (forward) {" line14="            for (let index = 0; index &lt;= 100; index++) {" line15="                let x = Math.map(index, 0, 100, 81, first_x)" line16="                let y = Math.map(index, 0, 100, 81, first_y)" line17="                if (0 &lt;= y) {" line18="                    SuperBit.Servo(SuperBit.enServo.S1, (90 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) + Math.atan2(y, x)) * (180 / 3.14)) + t1)" line19="                    SuperBit.Servo(SuperBit.enServo.S2, (180 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) * 2 * (180 / 3.14)) - (90 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) + Math.atan2(y, x)) * (180 / 3.14))) + t2)" line20="                } else {" line21="                    SuperBit.Servo(SuperBit.enServo.S1, (180 - Math.atan2(x, y) * (180 / 3.14)) + t1)" line22="                    SuperBit.Servo(SuperBit.enServo.S2, (180 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) * 2 * (180 / 3.14) - ((180 - Math.atan2(x, y) * (180 / 3.14)) - 90))) + t2)" line23="                }" line24="                basic.pause(10)" line25="            }" line26="        } else {" line27="            for (let index2 = 100; index2 &gt;= 0; index2--) {" line28="                let x2 = Math.map(index2, 0, 100, 81, first_x)" line29="                let y2 = Math.map(index2, 0, 100, 81, first_y)" line30="                if (0 &lt;= y2) {" line31="                    SuperBit.Servo(SuperBit.enServo.S1, (90 - (Math.acos(Math.sqrt(x2 ** 2 + y2 ** 2) / 160) + Math.atan2(y2, x2)) * (180 / 3.14)) + t1)" line32="                    SuperBit.Servo(SuperBit.enServo.S2, (180 - (Math.acos(Math.sqrt(x2 ** 2 + y2 ** 2) / 160) * 2 * (180 / 3.14)) - (90 - (Math.acos(Math.sqrt(x2 ** 2 + y2 ** 2) / 160) + Math.atan2(y2, x2)) * (180 / 3.14))) + t2)" line33="                } else {" line34="                    SuperBit.Servo(SuperBit.enServo.S1, (180 - Math.atan2(x2, y2) * (180 / 3.14)) + t1)" line35="                    SuperBit.Servo(SuperBit.enServo.S2, (180 - (Math.acos(Math.sqrt(x2 ** 2 + y2 ** 2) / 160) * 2 * (180 / 3.14) - ((180 - Math.atan2(x2, y2) * (180 / 3.14)) - 90))) + t2)" line36="                }" line37="                basic.pause(10)" line38="            }" line39="        }" line40="    }" line41="" line42="    //%block = &quot;servo2 at $x $y&quot;" line43="    export function servo2At(x: number, y: number) {" line44="        x |= 0" line45="        y |= 0" line46="        if (0 &lt;= y) {" line47="            return (180 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) * 2 * (180 / 3.14)) - (90 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) + Math.atan2(y, x)) * (180 / 3.14)))" line48="        } else {" line49="            return 180 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) * 2 * (180 / 3.14) - ((180 - Math.atan2(x, y) * (180 / 3.14)) - 90))" line50="        }" line51="    }" line52="" line53="    //%block = &quot;servo1 at $x $y&quot;" line54="    export function servo1At(x: number, y: number) {" line55="        x |= 0" line56="        y |= 0" line57="        if (0 &lt;= y) {" line58="            return (90 - (Math.acos(Math.sqrt(x ** 2 + y ** 2) / 160) + Math.atan2(y, x)) * (180 / 3.14))" line59="        } else {" line60="            return (180 - Math.atan2(x, y) * (180 / 3.14))" line61="        }" line62="    }" line63="" line64="}" numlines="65"></mutation></block></next></block></next></block></next></block></next></block></statement></block></xml>